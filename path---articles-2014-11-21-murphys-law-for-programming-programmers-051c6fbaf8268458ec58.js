webpackJsonp([0x91c5466eb983],{466:function(l,n){l.exports={data:{site:{siteMetadata:{title:"Blog by Michael Lancaster",subtitle:"Software Engineer focused in Javascript applications",copyright:"© All rights reserved.",author:{name:"Michael Lancaster",twitter:"weblancaster"},url:"http://www.bymichaellancaster.com"}},markdownRemark:{id:"/Users/michaellancaster/Sites/github/michaellancaster-blog/src/pages/articles/2014-11-21-murphys-law-for-programming-programmers/index.md absPath of file >>> MarkdownRemark",html:'<p>Murphy’s law in the life of a programmer useful for every Friday 5pm EOD.</p>\n<ul>\n<li>\n<ol>\n<li>Any given program, when running, is obsolete. </li>\n</ol>\n</li>\n<li>\n<ol start="2">\n<li>Any given program costs more and takes longer. </li>\n</ol>\n</li>\n<li>\n<ol start="3">\n<li>If any program is useful, it will have to be changed. </li>\n</ol>\n</li>\n<li>\n<ol start="4">\n<li>If a program is useless, it will have to be documented. </li>\n</ol>\n</li>\n<li>\n<ol start="5">\n<li>Any given program will expand to fill all available memory. </li>\n</ol>\n</li>\n<li>\n<ol start="6">\n<li>The value of a program is proportional to the weight of its output. </li>\n</ol>\n</li>\n<li>\n<ol start="7">\n<li>Program complexity always grows until it exceeds the capability of the programmer who must maintain it. </li>\n</ol>\n</li>\n<li>\n<ol start="8">\n<li>If a test installation functions perfectly, all subsequent systems will malfunction. </li>\n</ol>\n</li>\n<li>\n<ol start="9">\n<li>Job control cards that positively cannot be arranged in improper order will be.</li>\n</ol>\n</li>\n<li>\n<ol start="10">\n<li>If the input editor has been designed to reject all bad input, an ingenious idiot will discover a method to get bad data past it.</li>\n</ol>\n</li>\n<li>\n<ol start="11">\n<li>Profanity is the one language all programmers know best.</li>\n</ol>\n</li>\n<li>\n<ol start="12">\n<li>Adding manpower to a late software project makes it later.</li>\n</ol>\n</li>\n<li>\n<ol start="13">\n<li>A carelessly planned project takes three times longer to complete than expected; a carefully planned project takes only twice as long.</li>\n</ol>\n</li>\n<li>\n<ol start="14">\n<li>(Lubarsky’s Law of Cybernetic Entomology) There is always one more bug.</li>\n</ol>\n</li>\n<li>\n<ol start="15">\n<li>It is impossible to make any program foolproof because fools are so ingenious.</li>\n</ol>\n</li>\n<li>\n<ol start="16">\n<li>When things are going well, something will go wrong.</li>\n</ol>\n</li>\n<li>\n<ol start="17">\n<li>When things just can’t get any worse, they will.</li>\n</ol>\n</li>\n<li>\n<ol start="18">\n<li>Anytime things appear to be going well, you have overlooked something.</li>\n</ol>\n</li>\n<li>\n<ol start="19">\n<li>Test functions and their tests should be reproducible — they should all fail in the same way.</li>\n</ol>\n</li>\n<li>\n<ol start="20">\n<li>If it looks easy, it’s tough.</li>\n</ol>\n</li>\n<li>\n<ol start="21">\n<li>If it looks tough, it’s damn near impossible.</li>\n</ol>\n</li>\n<li>\n<ol start="22">\n<li>You always find any bug in the last place you look.</li>\n</ol>\n</li>\n<li>\n<ol start="23">\n<li>Anything can be made to work if you fiddle with it long enough.</li>\n</ol>\n</li>\n<li>\n<ol start="24">\n<li>A terminal usually works better if you plug it in. </li>\n</ol>\n</li>\n<li>\n<ol start="25">\n<li>If all else fails, read the documentation.</li>\n</ol>\n</li>\n<li>\n<ol start="26">\n<li>If you do not understand a particular word in a piece of technical writing, ignore it. The piece will make perfect sense without it.</li>\n</ol>\n</li>\n<li>\n<ol start="27">\n<li>No matter how much you do, you’ll never do enough.</li>\n</ol>\n</li>\n<li>\n<ol start="28">\n<li>What you don’t do is always more important than what you do.</li>\n</ol>\n</li>\n<li>\n<ol start="29">\n<li>Procrastination avoids boredom; one never has the feeling that there is nothing important to do.</li>\n</ol>\n</li>\n<li>\n<ol start="30">\n<li>Always leave room to add an explanation if it doesn’t work out.</li>\n</ol>\n</li>\n<li>\n<ol start="31">\n<li>No amount of genius can overcome a preoccupation with detail.</li>\n</ol>\n</li>\n<li>\n<ol start="32">\n<li>Nothing is impossible for a man who doesn’t have to do it himself.</li>\n</ol>\n</li>\n<li>\n<ol start="33">\n<li>If builders built buildings the way programmers write programs, then the first woodpecker than came along would destroy civilization.</li>\n</ol>\n</li>\n<li>\n<ol start="34">\n<li>Programmers will act rational when all other possibilities have been exhausted.</li>\n</ol>\n</li>\n</ul>\n<p>Cheers!</p>\n<p><small>* From <a href="http://www.murphys-laws.com/murphy/murphy-computer.html" title="Murphy\'s law for programmers" target="_blank">Murphy’s law site</a>.</small></p>',fields:{date:"2014-11-21"},frontmatter:{title:"Murphy's law for programmers",description:"Murphy's law in the life of a programmer useful for every Friday 5pm EOD."}}},pathContext:{slug:"/articles/2014-11-21-murphys-law-for-programming-programmers/"}}}});
//# sourceMappingURL=path---articles-2014-11-21-murphys-law-for-programming-programmers-051c6fbaf8268458ec58.js.map