{"version":3,"sources":["webpack:///path---articles-2015-01-28-nodejs-recursively-access-folder-d4d4d0c5eac484b34dcd.js","webpack:///./.cache/json/articles-2015-01-28-nodejs-recursively-access-folder.json"],"names":["webpackJsonp","473","module","exports","data","site","siteMetadata","title","subtitle","copyright","author","name","twitter","url","markdownRemark","id","html","fields","date","frontmatter","description","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,4BAAAC,SAAA,uDAAAC,UAAA,yBAAAC,QAAqJC,KAAA,oBAAAC,QAAA,gBAAoDC,IAAA,sCAA4CC,gBAAmBC,GAAA,wKAAAC,KAAA,u1OAAmqPC,QAAkLC,KAAA,cAAoBC,aAAgBZ,MAAA,4CAAAa,YAAA,0EAA2IC,aAAgBC,KAAA","file":"path---articles-2015-01-28-nodejs-recursively-access-folder-d4d4d0c5eac484b34dcd.js","sourcesContent":["webpackJsonp([239810255218777],{\n\n/***/ 473:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog by Michael Lancaster\",\"subtitle\":\"Software Engineer focused in Javascript applications\",\"copyright\":\"Â© All rights reserved.\",\"author\":{\"name\":\"Michael Lancaster\",\"twitter\":\"weblancaster\"},\"url\":\"http://www.bymichaellancaster.com\"}},\"markdownRemark\":{\"id\":\"/Users/michaellancaster/Sites/github/michaellancaster-blog/src/pages/articles/2015-01-28-nodejs-recursively-access-folder/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>A very quick post on how to access folders recursively with Node.js. <br>\\nThis code was taken from Grunt.js src code with a slight change made by myself.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> fs <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fs'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Windows?</span>\\n<span class=\\\"token keyword\\\">var</span> win32 <span class=\\\"token operator\\\">=</span> process<span class=\\\"token punctuation\\\">.</span>platform <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'win32'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// Normalize \\\\\\\\ paths to / paths.</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">unixifyPath</span><span class=\\\"token punctuation\\\">(</span>filepath<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>win32<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> filepath<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token regex\\\">/\\\\\\\\/g</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'/'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> filepath<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Recurse into a directory, executing callback for each file.</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">walk</span><span class=\\\"token punctuation\\\">(</span>rootdir<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">,</span> subdir<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> abspath <span class=\\\"token operator\\\">=</span> subdir <span class=\\\"token operator\\\">?</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>rootdir<span class=\\\"token punctuation\\\">,</span> subdir<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> rootdir<span class=\\\"token punctuation\\\">;</span>\\n  fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readdirSync</span><span class=\\\"token punctuation\\\">(</span>abspath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> filepath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>abspath<span class=\\\"token punctuation\\\">,</span> filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">statSync</span><span class=\\\"token punctuation\\\">(</span>filepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isDirectory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">walk</span><span class=\\\"token punctuation\\\">(</span>rootdir<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">unixifyPath</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>subdir <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span> filename <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">unixifyPath</span><span class=\\\"token punctuation\\\">(</span>filepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> rootdir<span class=\\\"token punctuation\\\">,</span> subdir<span class=\\\"token punctuation\\\">,</span> filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>How to use?</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token function\\\">walk</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./pathTofolder'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>filepath<span class=\\\"token punctuation\\\">,</span> rootdir<span class=\\\"token punctuation\\\">,</span> subdir<span class=\\\"token punctuation\\\">,</span> filename<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Filepath'</span><span class=\\\"token punctuation\\\">,</span> filepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>code<span class=\\\"token operator\\\">>></span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>pre<span class=\\\"token operator\\\">></span>\\n\\n\\nCheers<span class=\\\"token operator\\\">!</span></code></pre>\\n      </div>\",\"fields\":{\"date\":\"2015-01-28\"},\"frontmatter\":{\"title\":\"Accessing folder recursively with Node.js\",\"description\":\"A very quick post on how to access folders recursively with Node.js.\"}}},\"pathContext\":{\"slug\":\"/articles/2015-01-28-nodejs-recursively-access-folder/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-2015-01-28-nodejs-recursively-access-folder-d4d4d0c5eac484b34dcd.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog by Michael Lancaster\",\"subtitle\":\"Software Engineer focused in Javascript applications\",\"copyright\":\"Â© All rights reserved.\",\"author\":{\"name\":\"Michael Lancaster\",\"twitter\":\"weblancaster\"},\"url\":\"http://www.bymichaellancaster.com\"}},\"markdownRemark\":{\"id\":\"/Users/michaellancaster/Sites/github/michaellancaster-blog/src/pages/articles/2015-01-28-nodejs-recursively-access-folder/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>A very quick post on how to access folders recursively with Node.js. <br>\\nThis code was taken from Grunt.js src code with a slight change made by myself.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> fs <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fs'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Windows?</span>\\n<span class=\\\"token keyword\\\">var</span> win32 <span class=\\\"token operator\\\">=</span> process<span class=\\\"token punctuation\\\">.</span>platform <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'win32'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// Normalize \\\\\\\\ paths to / paths.</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">unixifyPath</span><span class=\\\"token punctuation\\\">(</span>filepath<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>win32<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> filepath<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token regex\\\">/\\\\\\\\/g</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'/'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> filepath<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Recurse into a directory, executing callback for each file.</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">walk</span><span class=\\\"token punctuation\\\">(</span>rootdir<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">,</span> subdir<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> abspath <span class=\\\"token operator\\\">=</span> subdir <span class=\\\"token operator\\\">?</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>rootdir<span class=\\\"token punctuation\\\">,</span> subdir<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> rootdir<span class=\\\"token punctuation\\\">;</span>\\n  fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readdirSync</span><span class=\\\"token punctuation\\\">(</span>abspath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> filepath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>abspath<span class=\\\"token punctuation\\\">,</span> filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">statSync</span><span class=\\\"token punctuation\\\">(</span>filepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isDirectory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">walk</span><span class=\\\"token punctuation\\\">(</span>rootdir<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token function\\\">unixifyPath</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>subdir <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span> filename <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">unixifyPath</span><span class=\\\"token punctuation\\\">(</span>filepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> rootdir<span class=\\\"token punctuation\\\">,</span> subdir<span class=\\\"token punctuation\\\">,</span> filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>How to use?</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token function\\\">walk</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./pathTofolder'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>filepath<span class=\\\"token punctuation\\\">,</span> rootdir<span class=\\\"token punctuation\\\">,</span> subdir<span class=\\\"token punctuation\\\">,</span> filename<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Filepath'</span><span class=\\\"token punctuation\\\">,</span> filepath<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>code<span class=\\\"token operator\\\">>></span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>pre<span class=\\\"token operator\\\">></span>\\n\\n\\nCheers<span class=\\\"token operator\\\">!</span></code></pre>\\n      </div>\",\"fields\":{\"date\":\"2015-01-28\"},\"frontmatter\":{\"title\":\"Accessing folder recursively with Node.js\",\"description\":\"A very quick post on how to access folders recursively with Node.js.\"}}},\"pathContext\":{\"slug\":\"/articles/2015-01-28-nodejs-recursively-access-folder/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-2015-01-28-nodejs-recursively-access-folder.json\n// module id = 473\n// module chunks = 239810255218777"],"sourceRoot":""}